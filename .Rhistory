---
title: "Stat311 Homework 6 Template"
```{r setup, include=FALSE}
library(knitr)
library(tidyverse)
library(tidyverse)
library(BSDA)
mean_puzzle <- mean(IC.df$Puzzle)
### Read in the ice cream, birthweight, and cholesterol data sets.
```{r, eval=TRUE}
IC.df <- read.csv("IceCream.csv", header=TRUE, as.is=TRUE)
IC.df$Sex <- as.factor(IC.df$Sex)
IC.df$Flavor <- as.factor(IC.df$Flavor)
#
BW.df <- read.csv("BirthWeight.csv", header=TRUE, as.is=TRUE)
BW.df$Smoker <- as.factor(BW.df$Smoker)
BW.df$BirthWt <- as.factor(BW.df$BirthWt)
#
C.df <- read.csv("Cholesterol.csv", header=TRUE, as.is=TRUE)
C.df$Cereal <- as.factor(C.df$Cereal)
IC.df <- read.csv("IceCream.csv", header=TRUE, as.is=TRUE)
IC.df$Sex <- as.factor(IC.df$Sex)
IC.df$Flavor <- as.factor(IC.df$Flavor)
#
BW.df <- read.csv("BirthWeight.csv", header=TRUE, as.is=TRUE)
BW.df$Smoker <- as.factor(BW.df$Smoker)
BW.df$BirthWt <- as.factor(BW.df$BirthWt)
#
C.df <- read.csv("Cholesterol.csv", header=TRUE, as.is=TRUE)
C.df$Cereal <- as.factor(C.df$Cereal)
### Problem 1
```{r CI video}
### Problem 2
```{r create subsets and CI}
mean_puzzle <- mean(IC.df$Puzzle)
sd_puzzle <- sd(IC.df$Puzzle)
zsum.test(mean.x = mean_puzzle, sigma.x = sd_puzzle, n.x = 200, conf.level=0.95)
---
title: "Stat311 Homework 6 Template"
---
title: "Stat311 Homework 6 Template"
---
title: "Stat311 Homework 6 Template"
---
title: "Stat311 Homework 6 Template"
zsum.test(mean.x = mean_puzzle, sigma.x = sd_puzzle, n.x = 200, conf.level=0.95)
IC.df$Chocolate <- as.factor(IC.df$Flavor)
IC.df$Strawberry <- as.factor(IC.df$Flavor)
Choc <- as.factor(IC.df$Flavor)
Chocolate <- as.factor(IC.df$Chocolate)
Strawberry <- as.factor(IC.df$Strawberry)
zsum.test(mean.x = mean_puzzle, sigma.x = sd_puzzle, n.x = 200, conf.level=0.95)$conf.int
t.test(Chocolate$Video, Stawberry$Video, var.equal = FALSE, conf.level = 0.90)$conf.int
mean_video_choc <- mean(IC.df$Chocolate)
IC.df$Chocolate <- as.factor(IC.df$Chocolate)
IC.df$Strawberry <- as.factor(IC.df$Strawberry)
mean_video_choc <- mean(IC.df$Chocolate)
Choc <- filter(IC.df, Flavor == "Chocolate")
Straw <- filter(IC.df, Flavor == "Strawberry")
t.test(Choc$Video, Straw$Video, var.equal == FALSE, conf.level = 0.99)$conf.int
t.test(Choc$Video, Straw$Video, var.equal = FALSE, conf.level = 0.99)$conf.int
mean_choc_video <- mean(Choc$Video)
mean_choc_video
filter(IC,df, Flavor == "Chocolate" | Flavor == "Strawberry")
filter(IC,df, Flavor == "Chocolate")
### Read in the ice cream, birthweight, and cholesterol data sets.
```{r, eval=TRUE}
IC.df <- read.csv("IceCream.csv", header=TRUE, as.is=TRUE)
IC.df$Sex <- as.factor(IC.df$Sex)
IC.df$Flavor <- as.factor(IC.df$Flavor)
#
BW.df <- read.csv("BirthWeight.csv", header=TRUE, as.is=TRUE)
BW.df$Smoker <- as.factor(BW.df$Smoker)
BW.df$BirthWt <- as.factor(BW.df$BirthWt)
#
C.df <- read.csv("Cholesterol.csv", header=TRUE, as.is=TRUE)
C.df$Cereal <- as.factor(C.df$Cereal)
IC.df <- read.csv("IceCream.csv", header=TRUE, as.is=TRUE)
IC.df$Sex <- as.factor(IC.df$Sex)
IC.df$Flavor <- as.factor(IC.df$Flavor)
#
BW.df <- read.csv("BirthWeight.csv", header=TRUE, as.is=TRUE)
BW.df$Smoker <- as.factor(BW.df$Smoker)
BW.df$BirthWt <- as.factor(BW.df$BirthWt)
#
C.df <- read.csv("Cholesterol.csv", header=TRUE, as.is=TRUE)
C.df$Cereal <- as.factor(C.df$Cereal)
### Problem 1
```{r CI video}
### Problem 2
```{r create subsets and CI}
filter(IC,df, Flavor == "Chocolate")
filter(IC.df, Flavor == "Chocolate")
filter(IC.df, Flavor == "Chocolate" | Flavor == "Strawberry")
Choc <- filter(IC.df, Flavor == "Chocolate")
Straw <- filter(IC.df, Flavor == "Strawberry")
t.test(Choc$Video, Straw$Video, var.equal = FALSE, conf.level = 0.99)$conf.int
Chocolate <- IC.df %>% filter(Flavor == "Chocolate")
Strawberry <- IC.df %>% filter(Flavor == "Strawberry")
t.test(Chocolate$Video, Chocolate$Video, var.equal = FALSE, conf.level = 0.99)$conf.int
Chocolate <- IC.df %>% filter(Flavor == "2")
Strawberry <- IC.df %>% filter(Flavor == "3")
t.test(Chocolate$Video, Chocolate$Video, var.equal = FALSE, conf.level = 0.99)$conf.int
Chocolate <- filter(IC.df, Flavor == "2")
Strawberry <- IC.df %>% filter(Flavor == "3")
t.test(Chocolate$Video, Chocolate$Video, var.equal = FALSE, conf.level = 0.99)$conf.int
t.test(Chocolate$Video, Strawberry$Video, var.equal = FALSE, conf.level = 0.99)$conf.int
z.test(mean.x = mean_puzzle, sigma.x = sd_puzzle, n.x = 200, conf.level=0.95)$conf.int
z.test(mean_puzzle,
y = NULL,
alternative = "two.sided",
mu = 0,
sigma.x = sd_puzzle,
sigma.y = NULL,
conf.level = 0.95)
z.test(200,
y = NULL,
alternative = "two.sided",
mu = 0,
sigma.x = sd_puzzle,
sigma.y = NULL,
conf.level = 0.95)
z.test(200,
y = NULL,
alternative = "two.sided",
mu = mean_puzzle,
sigma.x = sd_puzzle,
sigma.y = NULL,
conf.level = 0.95)
z.test(nrow(IC.df),
y = NULL,
alternative = "two.sided",
mu = mean_puzzle,
sigma.x = sd_puzzle,
sigma.y = NULL,
conf.level = 0.95)
z.test(IC.df,
y = NULL,
alternative = "two.sided",
mu = mean_puzzle,
sigma.x = sd_puzzle,
sigma.y = NULL,
conf.level = 0.95)
z.test(IC.df$Puzzle,
alternative = "two.sided",
mu = mean_puzzle,
sigma.x = sd_puzzle,
conf.level = 0.95)
z.test(IC.df$Puzzle,
alternative = "two.sided",
mu = mean_puzzle,
sigma.x = sd_puzzle,
conf.level = 0.95)$conf.int
t.test(Chocolate$Video, Strawberry$Video, var.equal = FALSE, conf.level = 0.99)$conf.int
difference <- -12.976737 - (-2.515559)
difference
prop.test(22, 42, conf.level = 0.95, correct = FALSE)$conf.int
binom(22, 42, conf.level = 0.95, correct = FALSE)$conf.int
binom.test(22, 42, conf.level = 0.95, correct = FALSE)$conf.int
binom.test(22, 42, conf.level = 0.95)$conf.int
prop.test(x=c(6,42), n=c(22,42),
conf.level = 0.90, correct = FALSE)$conf.int
t.test(Chocolate$Video, Strawberry$Video, var.equal = FALSE, conf.level = 0.99)$conf.int
prop.test(x=c(6,42), n=c(22,42),
conf.level = 0.90, correct = FALSE)$conf.int
tsum.test(mean.x = 22.5, s.x = 3.77, n.x = 25,
mean.y = 25.2, s.y = 3.85, n.y = 18,
alternative = "two.sided",
mu = 0,
conf.level = 0.95)$conf.int
zsum.test(mean.x = 22.5, sigma.x = 3.77,
n.x = 25, mean.y = 25.2, sigma.y = 3.85,
n.y = 18, conf.level=0.95)$conf.int
tsum.test(mean.x = 22.5, s.x = 3.77, n.x = 25,
mean.y = 25.2, s.y = 3.85, n.y = 18,
alternative = "two.sided",
mu = -2.7,
conf.level = 0.95)$conf.int
### Problem 8
```{r tsum.test}
tsum.test(mean.x = 22.5, s.x = 3.77, n.x = 25,
mean.y = 25.2, s.y = 3.85, n.y = 18,
alternative = "two.sided",
mu = 2.7,
conf.level = 0.95)$conf.int
